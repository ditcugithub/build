name: Build and Deploy Dylib

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build Dylib with Theos
    runs-on: macos-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Theos and dependencies
      - name: Install Theos
        run: |
          echo "Installing Theos..."
          git clone --recursive https://github.com/theos/theos.git ~/theos
          echo "export THEOS=~/theos" >> $GITHUB_ENV
          export THEOS=~/theos
          echo "Theos installed at: $THEOS"
          brew install ldid

      # Step 3: Generate Makefile if missing
      - name: Check and generate Makefile
        run: |
          if [ ! -f Makefile ]; then
            echo "Generating Makefile..."
            cat <<'EOT' > Makefile
            ARCHS = arm64 arm64e
            TARGET = iphone:clang:latest:14.0

            include $(THEOS)/makefiles/common.mk

            TWEAK_NAME = AutoGeneratedTweak

            AutoGeneratedTweak_FILES = Tweak.xm
            AutoGeneratedTweak_CFLAGS = -fobjc-arc

            include $(THEOS_MAKE_PATH)/tweak.mk

            after-install::
	            install.exec "killall -9 SpringBoard"
            EOT
          else
            echo "Makefile exists, skipping creation."
          fi

      # Step 4: Build the dylib
      - name: Build with Theos
        env:
          THEOS: ${{ env.THEOS }}
        run: |
          make clean
          make package FINALPACKAGE=1

      # Step 5: Upload the .dylib as an artifact
      - name: Upload Dylib Artifact
        uses: actions/upload-artifact@v3
        with:
          name: AutoGeneratedDylib
          path: .theos/obj/*.dylib
